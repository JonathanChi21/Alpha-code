{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/cmpun/OneDrive/Documentos/alpha-code/src/components/main-components/Languages.tsx\";\nimport * as React from 'react';\nimport { Button, ButtonGroup, ClickAwayListener, Grid } from '@material-ui/core';\nimport { Grow, MenuItem, MenuList, Paper, Popper } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nconst options = [\"Python\", \"JavaScript\", \"Java\"];\nexport default function Languages() {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const handleClick = () => {\n    console.info(`You clicked ${options[selectedIndex]}`);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const styles = {\n    main: {\n      transform: 'translateX(300px)'\n    },\n    btn: {\n      backgroundColor: '#3a0ca3',\n      color: '#fff',\n      outline: 'none'\n    }\n  };\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    style: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    variant: \"contained\",\n    ref: anchorRef,\n    \"aria-label\": \"split button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick,\n    style: styles.btn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, options[selectedIndex]), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    \"aria-controls\": open ? 'split-button-menu' : undefined,\n    \"aria-expanded\": open ? 'true' : undefined,\n    \"aria-label\": \"select merge strategy\",\n    \"aria-haspopup\": \"menu\",\n    onClick: handleToggle,\n    style: styles.btn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Popper, {\n    open: open,\n    anchorEl: anchorRef.current,\n    role: undefined,\n    transition: true,\n    disablePortal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, ({\n    TransitionProps,\n    placement\n  }) => /*#__PURE__*/React.createElement(Grow, Object.assign({}, TransitionProps, {\n    style: {\n      transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MenuList, {\n    id: \"split-button-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, options.map((option, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: option,\n    selected: index === selectedIndex,\n    onClick: event => handleMenuItemClick(event, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }\n  }, option)))))))));\n}","map":{"version":3,"sources":["/mnt/c/Users/cmpun/OneDrive/Documentos/alpha-code/src/components/main-components/Languages.tsx"],"names":["React","Button","ButtonGroup","ClickAwayListener","Grid","Grow","MenuItem","MenuList","Paper","Popper","ArrowDropDownIcon","options","Languages","open","setOpen","useState","anchorRef","useRef","selectedIndex","setSelectedIndex","handleClick","console","info","handleMenuItemClick","event","index","handleToggle","prevOpen","handleClose","current","contains","target","styles","main","transform","btn","backgroundColor","color","outline","undefined","TransitionProps","placement","transformOrigin","map","option"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Button, ButtonGroup, ClickAwayListener, Grid } from '@material-ui/core'\nimport { Grow, MenuItem, MenuList, Paper, Popper } from '@material-ui/core'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\n\nconst options = [\"Python\", \"JavaScript\", \"Java\"]\n\nexport default function Languages() {\n    \nconst [open, setOpen] = React.useState(false);\nconst anchorRef = React.useRef<HTMLDivElement>(null);\nconst [selectedIndex, setSelectedIndex] = React.useState(1);\n\nconst handleClick = () => {\n    console.info(`You clicked ${options[selectedIndex]}`);\n};\n\nconst handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    index: number,\n  ) => {\n    setSelectedIndex(index);\n    setOpen(false);\n};\n\nconst handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n};\n\nconst handleClose = (event: React.MouseEvent<Document, MouseEvent>) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n      return;\n    }\n    setOpen(false);\n};\n\nconst styles = {\n  main :{\n    transform: 'translateX(300px)',\n  },\n  btn: {\n    backgroundColor: '#3a0ca3',\n    color: '#fff',\n    outline: 'none',\n  }\n}\n\n return(\n     <Grid container direction=\"column\" alignItems=\"center\" style={styles.main}>\n        <Grid item xs={12}>\n            <ButtonGroup variant=\"contained\" ref={anchorRef} aria-label=\"split button\">\n                <Button onClick={handleClick} style={styles.btn}>{options[selectedIndex]}</Button>\n                <Button\n                  size=\"small\"\n                  aria-controls={open ? 'split-button-menu' : undefined}\n                  aria-expanded={open ? 'true' : undefined}\n                  aria-label=\"select merge strategy\"\n                  aria-haspopup=\"menu\"\n                  onClick={handleToggle}\n                  style={styles.btn}\n                >\n                    <ArrowDropDownIcon />\n                </Button>\n            </ButtonGroup>\n            <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n            {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{\n                transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList id=\"split-button-menu\">\n                    {options.map((option, index) => (\n                      <MenuItem\n                        key={option}\n                        selected={index === selectedIndex}\n                        onClick={(event) => handleMenuItemClick(event, index)}\n                      >\n                        {option}\n                      </MenuItem>\n                    ))}\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </Grid>\n     </Grid>\n )\n}"]},"metadata":{},"sourceType":"module"}